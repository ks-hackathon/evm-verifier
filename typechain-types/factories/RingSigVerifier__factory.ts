/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  RingSigVerifier,
  RingSigVerifierInterface,
} from "../RingSigVerifier";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "uint256[]",
        name: "ring",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "responses",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    name: "verifyRingSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061121d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c434c5ee14610030575b600080fd5b61004a60048036038101906100459190610a78565b610060565b6040516100579190610b4e565b60405180910390f35b600060018451118015610080575060006002855161007e9190610b98565b145b6100bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b690610c4c565b60405180910390fd5b600284516100cd9190610c9b565b83511461010f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010690610d3e565b60405180910390fd5b600061011a856102e4565b9050600061019082888760008151811061013757610136610d5e565b5b60200260200101518760405180604001604052808c60008151811061015f5761015e610d5e565b5b602002602001015181526020018c6001815181106101805761017f610d5e565b5b602002602001015181525061038a565b90506000600290505b865181101561023f576102298389886002856101b59190610c9b565b815181106101c6576101c5610d5e565b5b60200260200101518560405180604001604052808d88815181106101ed576101ec610d5e565b5b602002602001015181526020018d6001896102089190610d8d565b8151811061021957610218610d5e565b5b602002602001015181525061038a565b91506002816102389190610d8d565b9050610199565b506102d6828887600189516102549190610dc1565b8151811061026557610264610d5e565b5b60200260200101518460405180604001604052808c60028e516102889190610dc1565b8151811061029957610298610d5e565b5b602002602001015181526020018c60018e516102b59190610dc1565b815181106102c6576102c5610d5e565b5b602002602001015181525061038a565b841492505050949350505050565b6060600060405180602001604052806000815250905060005b8351811015610380578184828151811061031a57610319610d5e565b5b6020026020010151856001846103309190610d8d565b8151811061034157610340610d5e565b5b602002602001015160405160200161035b93929190610e87565b60405160208183030381529060405291506002816103799190610d8d565b90506102fd565b5080915050919050565b60008073__$ac9df8564564f09022d97baa7c4ddef38f$__637670aa7673__$ac9df8564564f09022d97baa7c4ddef38f$__63cef3da1a8860405180604001604052807f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f8179881526020017f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b88152506040518363ffffffff1660e01b8152600401610434929190610f7a565b606060405180830381865af4158015610451573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104759190611069565b73__$ac9df8564564f09022d97baa7c4ddef38f$__63cef3da1a88886040518363ffffffff1660e01b81526004016104ae929190610f7a565b606060405180830381865af41580156104cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ef9190611069565b6040518363ffffffff1660e01b815260040161050c92919061111a565b606060405180830381865af4158015610529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054d9190611069565b9050610579817ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141610633565b600087878360006003811061059157610590610d5e565b5b6020020151846001600381106105aa576105a9610d5e565b5b60200201516040516020016105c29493929190611143565b6040516020818303038152906040529050610626816040516020016105e791906111d0565b6040516020818303038152906040528051906020012060001c7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141610733565b9250505095945050505050565b60006106578360026003811061064c5761064b610d5e565b5b602002015183610766565b90506000828061066a57610669610b69565b5b8283099050828061067e5761067d610b69565b5b818560006003811061069357610692610d5e565b5b602002015109846000600381106106ad576106ac610d5e565b5b60200201818152505082806106c5576106c4610b69565b5b83806106d4576106d3610b69565b5b828409856001600381106106eb576106ea610d5e565b5b6020020151098460016003811061070557610704610d5e565b5b60200201818152505060018460026003811061072457610723610d5e565b5b60200201818152505050505050565b60008082846107429190610b98565b9050600081101561075c5782816107599190610d8d565b90505b8091505092915050565b60008083148061077557508183145b806107805750600082145b1561078a57600080fd5b818311156107a6578183816107a2576107a1610b69565b5b0692505b600080600190506000849050600086905060005b600082146107f6578183816107d2576107d1610b69565b5b049050838482028603838484028603809550819650829750839850505050506107ba565b6000851215610811578460000387039550505050505061081a565b84955050505050505b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108878261083e565b810181811067ffffffffffffffff821117156108a6576108a561084f565b5b80604052505050565b60006108b9610820565b90506108c5828261087e565b919050565b600067ffffffffffffffff8211156108e5576108e461084f565b5b6108ee8261083e565b9050602081019050919050565b82818337600083830152505050565b600061091d610918846108ca565b6108af565b90508281526020810184848401111561093957610938610839565b5b6109448482856108fb565b509392505050565b600082601f83011261096157610960610834565b5b813561097184826020860161090a565b91505092915050565b600067ffffffffffffffff8211156109955761099461084f565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6109be816109ab565b81146109c957600080fd5b50565b6000813590506109db816109b5565b92915050565b60006109f46109ef8461097a565b6108af565b90508083825260208201905060208402830185811115610a1757610a166109a6565b5b835b81811015610a405780610a2c88826109cc565b845260208401935050602081019050610a19565b5050509392505050565b600082601f830112610a5f57610a5e610834565b5b8135610a6f8482602086016109e1565b91505092915050565b60008060008060808587031215610a9257610a9161082a565b5b600085013567ffffffffffffffff811115610ab057610aaf61082f565b5b610abc8782880161094c565b945050602085013567ffffffffffffffff811115610add57610adc61082f565b5b610ae987828801610a4a565b935050604085013567ffffffffffffffff811115610b0a57610b0961082f565b5b610b1687828801610a4a565b9250506060610b27878288016109cc565b91505092959194509250565b60008115159050919050565b610b4881610b33565b82525050565b6000602082019050610b636000830184610b3f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ba3826109ab565b9150610bae836109ab565b925082610bbe57610bbd610b69565b5b828206905092915050565b600082825260208201905092915050565b7f52696e67206c656e677468206d757374206265206576656e20616e642067726560008201527f61746572207468616e2031000000000000000000000000000000000000000000602082015250565b6000610c36602b83610bc9565b9150610c4182610bda565b604082019050919050565b60006020820190508181036000830152610c6581610c29565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ca6826109ab565b9150610cb1836109ab565b925082610cc157610cc0610b69565b5b828204905092915050565b7f526573706f6e736573206c656e677468206d75737420626520657175616c207460008201527f6f2072696e67206c656e677468202f2032000000000000000000000000000000602082015250565b6000610d28603183610bc9565b9150610d3382610ccc565b604082019050919050565b60006020820190508181036000830152610d5781610d1b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d98826109ab565b9150610da3836109ab565b9250828201905080821115610dbb57610dba610c6c565b5b92915050565b6000610dcc826109ab565b9150610dd7836109ab565b9250828203905081811115610def57610dee610c6c565b5b92915050565b600081519050919050565b600081905092915050565b60005b83811015610e29578082015181840152602081019050610e0e565b60008484015250505050565b6000610e4082610df5565b610e4a8185610e00565b9350610e5a818560208601610e0b565b80840191505092915050565b6000819050919050565b610e81610e7c826109ab565b610e66565b82525050565b6000610e938286610e35565b9150610e9f8285610e70565b602082019150610eaf8284610e70565b602082019150819050949350505050565b610ec9816109ab565b82525050565b600060029050919050565b600081905092915050565b6000819050919050565b610ef8816109ab565b82525050565b6000610f0a8383610eef565b60208301905092915050565b6000602082019050919050565b610f2c81610ecf565b610f368184610eda565b9250610f4182610ee5565b8060005b83811015610f72578151610f598782610efe565b9650610f6483610f16565b925050600181019050610f45565b505050505050565b6000606082019050610f8f6000830185610ec0565b610f9c6020830184610f23565b9392505050565b600067ffffffffffffffff821115610fbe57610fbd61084f565b5b602082029050919050565b600081519050610fd8816109b5565b92915050565b6000610ff1610fec84610fa3565b6108af565b9050806020840283018581111561100b5761100a6109a6565b5b835b8181101561103457806110208882610fc9565b84526020840193505060208101905061100d565b5050509392505050565b600082601f83011261105357611052610834565b5b6003611060848285610fde565b91505092915050565b60006060828403121561107f5761107e61082a565b5b600061108d8482850161103e565b91505092915050565b600060039050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b6110cc81611096565b6110d681846110a1565b92506110e1826110ac565b8060005b838110156111125781516110f98782610efe565b9650611104836110b6565b9250506001810190506110e5565b505050505050565b600060c08201905061112f60008301856110c3565b61113c60608301846110c3565b9392505050565b600061114f8287610e35565b915061115b8286610e35565b91506111678285610e70565b6020820191506111778284610e70565b60208201915081905095945050505050565b600081519050919050565b600081905092915050565b60006111aa82611189565b6111b48185611194565b93506111c4818560208601610e0b565b80840191505092915050565b60006111dc828461119f565b91508190509291505056fea2646970667358221220ebaa891a5775087b739cb55cd2c5e68d10275dc2d325b80f86003b40633f8bb464736f6c63430008140033";

type RingSigVerifierConstructorParams =
  | [linkLibraryAddresses: RingSigVerifierLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RingSigVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class RingSigVerifier__factory extends ContractFactory {
  constructor(...args: RingSigVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        RingSigVerifier__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: RingSigVerifierLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ac9df8564564f09022d97baa7c4ddef38f\\$__", "g"),
      linkLibraryAddresses["contracts/secp256k1.sol:Secp256k1"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RingSigVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RingSigVerifier__factory {
    return super.connect(runner) as RingSigVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RingSigVerifierInterface {
    return new Interface(_abi) as RingSigVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RingSigVerifier {
    return new Contract(address, _abi, runner) as unknown as RingSigVerifier;
  }
}

export interface RingSigVerifierLibraryAddresses {
  ["contracts/secp256k1.sol:Secp256k1"]: string;
}
